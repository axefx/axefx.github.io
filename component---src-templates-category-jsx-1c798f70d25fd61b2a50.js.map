{"version":3,"file":"component---src-templates-category-jsx-1c798f70d25fd61b2a50.js","mappings":"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","sources":["webpack://axefx/./src/components/Avatar/index.js","webpack://axefx/./src/components/Avatar/Avatar.jsx","webpack://axefx/./src/components/Media/MediaContainer.jsx","webpack://axefx/./src/components/Media/MediaOverlay.jsx","webpack://axefx/./src/components/PostListing/PostPreview.jsx","webpack://axefx/./src/components/PostListing/PostListing.jsx","webpack://axefx/./src/components/Chip/index.js","webpack://axefx/./src/components/Chip/Chip.jsx","webpack://axefx/./src/components/PostTags/PostTags.jsx","webpack://axefx/./src/templates/category.jsx","webpack://axefx/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"],"sourcesContent":["import Avatar from \"./Avatar\";\nexport default Avatar;\n","import React from \"react\";\n\nconst Avatar = () => {\n  return <div className=\"avatar avatar--default\"></div>;\n};\n\nexport default Avatar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst MediaContainer = ({ children, cover, coverHeight, className }) => {\n  return (\n    <div\n      className={className}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"end\",\n        backgroundImage: `url(${cover})`,\n        height: `${coverHeight}px`,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nMediaContainer.propTypes = {\n  cover: PropTypes.string,\n  coverHeight: PropTypes.number,\n  className: PropTypes.string,\n};\n\nexport default MediaContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst MediaOverlay = (props) => {\n  return (\n    <div\n      className=\"media-overlay\"\n      style={{ backgroundColor: \"rgba(0,0,0,0.5)\", zIndex: 2, display: \"flex\" }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nMediaOverlay.propTypes = {};\n\nexport default MediaOverlay;\n","import React, { Component } from \"react\";\nimport Link from \"gatsby-link\";\nimport PostTags from \"../PostTags/PostTags\";\nimport Card, { CardTitle, CardText, CardSubtitle } from \"../Card\";\nimport Button from \"../Button\";\nimport Avatar from \"../Avatar\";\nimport { MediaContainer, MediaOverlay } from \"../Media\";\nimport { isBrowser } from \"../../utils\";\n\nclass PostPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true,\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n  componentDidMount() {\n    this.handleResize();\n    if (isBrowser) {\n      window.addEventListener(\"resize\", this.handleResize);\n    }\n  }\n\n  componentWillUnmount() {\n    if (isBrowser) {\n      window.removeEventListener(\"resize\", this.handleResize);\n    }\n  }\n\n  handleResize() {\n    if (isBrowser) {\n      if (window.innerWidth >= 640) {\n        this.setState({ mobile: false });\n      } else {\n        this.setState({ mobile: true });\n      }\n    }\n  }\n  render() {\n    const { postInfo } = this.props;\n    const { mobile } = this.state;\n    const expand = mobile;\n    /* eslint no-undef: \"off\"*/\n    const cover = postInfo.cover.startsWith(\"/\")\n      ? __PATH_PREFIX__ + postInfo.cover\n      : postInfo.cover;\n    const coverHeight = mobile ? 162 : 225;\n    return (\n      <Card key={postInfo.path}>\n        <Link style={{ textDecoration: \"none\" }} to={postInfo.path}>\n          <MediaContainer\n            className=\"post-preview-cover\"\n            cover={cover}\n            coverHeight={coverHeight}\n          >\n            <MediaOverlay>\n              <CardTitle\n                className=\"card-title--primary card-title--title-large\"\n                title={postInfo.title}\n              >\n                <Button theme=\"secondary\">Read</Button>\n              </CardTitle>\n            </MediaOverlay>\n          </MediaContainer>\n        </Link>\n        <CardSubtitle\n          className=\"card-title--secondary card-title\"\n          expander={expand}\n          avatar={<Avatar />}\n          title={`Published on ${postInfo.date}`}\n          subtitle={`${postInfo.timeToRead} min read`}\n        />\n\n        <CardText expandable={expand}>\n          {postInfo.excerpt}\n          <PostTags tags={postInfo.tags} />\n        </CardText>\n      </Card>\n    );\n  }\n}\n\nexport default PostPreview;\n","import React from \"react\";\nimport PostPreview from \"./PostPreview\";\n\nconst PostListing = (props) => {\n  const postList = props.postEdges.map((postEdge) => ({\n    path: postEdge.node.fields.slug,\n    tags: postEdge.node.frontmatter.tags,\n    cover: postEdge.node.frontmatter.cover,\n    title: postEdge.node.frontmatter.title,\n    date: postEdge.node.frontmatter.date,\n    excerpt: postEdge.node.excerpt,\n    timeToRead: postEdge.node.timeToRead,\n  }));\n  return (\n    <div id=\"postListingContainer\">\n      <h2>Recent Posts</h2>\n      {postList.map((post) => (\n        <PostPreview key={post.title} postInfo={post} />\n      ))}\n    </div>\n  );\n};\n\nexport default PostListing;\n","import Chip from \"./Chip\";\nexport default Chip;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Chip = (props) => {\n  return <span className={props.className + \" chip\"}>{props.label}</span>;\n};\n\nChip.propTypes = {};\n\nexport default Chip;\n","import React, { Component } from \"react\";\nimport Link from \"gatsby-link\";\nimport Chip from \"../Chip\";\nimport { kebabCase } from \"../../utils\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map((tag) => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${kebabCase(tag)}`}\n            >\n              <Chip label={tag} className=\"post-preview-tags\" />\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\nimport MainLayout from \"../components/Layout\";\n\nexport default class CategoryTemplate extends React.Component {\n  render() {\n    const category = this.props.pageContext.category;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <MainLayout location={this.props.location} className=\"category-container\">\n        <Helmet>\n          <title>{`Posts in category \"${category}\" | ${config.siteTitle}`}</title>\n          <link\n            rel=\"canonical\"\n            href={`${config.siteUrl}/categories/${category}`}\n          />\n        </Helmet>\n        <PostListing postEdges={postEdges} />\n      </MainLayout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\"*/\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}"],"names":["className","children","cover","coverHeight","style","display","flexDirection","justifyContent","backgroundImage","height","props","backgroundColor","zIndex","PostPreview","state","mobile","handleResize","bind","componentDidMount","this","isBrowser","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","render","postInfo","expand","startsWith","__PATH_PREFIX__","Card","key","path","textDecoration","to","title","Button","theme","expander","avatar","Avatar","date","subtitle","timeToRead","expandable","excerpt","PostTags","tags","Component","postList","postEdges","map","postEdge","node","fields","slug","frontmatter","id","post","label","tag","kebabCase","CategoryTemplate","category","pageContext","data","allMarkdownRemark","edges","location","config","rel","href","React","_assertThisInitialized","self","ReferenceError"],"sourceRoot":""}